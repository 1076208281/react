{"version":3,"sources":["webpack:///path---warnings-invalid-aria-prop-html-dfb723555b2f49b212ca.js","webpack:///./.cache/json/warnings-invalid-aria-prop-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/warnings-invalid-aria-prop-html.json","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,yFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,2vBACAC,aACAC,MAAA,4BACAC,KAAA,KACAC,KAAA,MAEAC,QACAC,KAAA,gCACAC,KAAA,qCAIAC,aACAD,KAAA","file":"path---warnings-invalid-aria-prop-html-dfb723555b2f49b212ca.js","sourcesContent":["webpackJsonp([98402527300606],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/warnings-invalid-aria-prop-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>The invalid-aria-prop warning will fire if you attempt to render a DOM element with an aria-* prop that does not exist in the Web Accessibility Initiative (WAI) Accessible Rich Internet Application (ARIA) <a href=\\\"https://www.w3.org/TR/wai-aria-1.1/#states_and_properties\\\">specification</a>.</p>\\n<ol>\\n<li>\\n<p>If you feel that you are using a valid prop, check the spelling carefully. <code>aria-labelledby</code> and <code>aria-activedescendant</code> are often misspelled.</p>\\n</li>\\n<li>\\n<p>React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered</p>\\n</li>\\n</ol>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Invalid ARIA Prop Warning\",\n\t\t\t\t\t\"next\": null,\n\t\t\t\t\t\"prev\": null\n\t\t\t\t},\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"path\": \"warnings/invalid-aria-prop.md\",\n\t\t\t\t\t\"slug\": \"warnings/invalid-aria-prop.html\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"warnings/invalid-aria-prop.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---warnings-invalid-aria-prop-html-dfb723555b2f49b212ca.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>The invalid-aria-prop warning will fire if you attempt to render a DOM element with an aria-* prop that does not exist in the Web Accessibility Initiative (WAI) Accessible Rich Internet Application (ARIA) <a href=\\\"https://www.w3.org/TR/wai-aria-1.1/#states_and_properties\\\">specification</a>.</p>\\n<ol>\\n<li>\\n<p>If you feel that you are using a valid prop, check the spelling carefully. <code>aria-labelledby</code> and <code>aria-activedescendant</code> are often misspelled.</p>\\n</li>\\n<li>\\n<p>React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered</p>\\n</li>\\n</ol>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Invalid ARIA Prop Warning\",\n\t\t\t\t\"next\": null,\n\t\t\t\t\"prev\": null\n\t\t\t},\n\t\t\t\"fields\": {\n\t\t\t\t\"path\": \"warnings/invalid-aria-prop.md\",\n\t\t\t\t\"slug\": \"warnings/invalid-aria-prop.html\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"warnings/invalid-aria-prop.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/warnings-invalid-aria-prop-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/warnings-invalid-aria-prop-html.json\n// module chunks = 98402527300606"],"sourceRoot":""}
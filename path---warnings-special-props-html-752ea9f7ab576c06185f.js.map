{"version":3,"sources":["webpack:///path---warnings-special-props-html-752ea9f7ab576c06185f.js","webpack:///./.cache/json/warnings-special-props-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/warnings-special-props-html.json","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,qFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,2mBACAC,aACAC,MAAA,wBACAC,KAAA,KACAC,KAAA,MAEAC,QACAC,KAAA,4BACAC,KAAA,iCAIAC,aACAD,KAAA","file":"path---warnings-special-props-html-752ea9f7ab576c06185f.js","sourcesContent":["webpackJsonp([212628910320266],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/warnings-special-props-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>Most props on a JSX element are passed on to the component, however, there are two special props (<code>ref</code> and <code>key</code>) which are used by React, and are thus not forwarded to the component.</p>\\n<p>For instance, attempting to access <code>this.props.key</code> from a component (eg. the render function) is not defined.  If you need to access the same value within the child component, you should pass it as a different prop (ex: <code>&#x3C;ListItemWrapper key={result.id} id={result.id} /></code>). While this may seem redundant, it’s important to separate app logic from reconciling hints.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Special Props Warning\",\n\t\t\t\t\t\"next\": null,\n\t\t\t\t\t\"prev\": null\n\t\t\t\t},\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"path\": \"warnings/special-props.md\",\n\t\t\t\t\t\"slug\": \"warnings/special-props.html\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"warnings/special-props.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---warnings-special-props-html-752ea9f7ab576c06185f.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>Most props on a JSX element are passed on to the component, however, there are two special props (<code>ref</code> and <code>key</code>) which are used by React, and are thus not forwarded to the component.</p>\\n<p>For instance, attempting to access <code>this.props.key</code> from a component (eg. the render function) is not defined.  If you need to access the same value within the child component, you should pass it as a different prop (ex: <code>&#x3C;ListItemWrapper key={result.id} id={result.id} /></code>). While this may seem redundant, it’s important to separate app logic from reconciling hints.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Special Props Warning\",\n\t\t\t\t\"next\": null,\n\t\t\t\t\"prev\": null\n\t\t\t},\n\t\t\t\"fields\": {\n\t\t\t\t\"path\": \"warnings/special-props.md\",\n\t\t\t\t\"slug\": \"warnings/special-props.html\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"warnings/special-props.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/warnings-special-props-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/warnings-special-props-html.json\n// module chunks = 212628910320266"],"sourceRoot":""}